// From the lovely https://gist.github.com/sarahdayan/4d2cc04a636e8039f10a889a0e29fbd9
// Sass modifiers mixin by Sarah Dayan
// modified a little bit by me

@mixin modifiers($map, $attribute, $prefix: '-', $seperator: '-', $base: 'base') {
  @each $key, $value in $map {
    // if key is specified as the 'base', do not add key to class's name
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      // if current value of key-value pair is another map, recurse
      @if type-of($value) == 'map' {
        @include modifiers($value, $attribute, $seperator);
      }
      @else {
        #{$attribute}: $value;
      }
    }
  }
}

// maps
$colors: (
  red: #ff3538,
  grey: (
    base: #404145,
    light: #c7c7cd
  ),
  yellow: (
    base: #ecaf2d
  ),
  green: (
    base: #5ad864
  )
);

$font-sizes: (
  small: 12px,
  medium: 14px,
  large: 16px,
  x-large: 18px,
  xx-large: 20px
);

$spacing-sizes: (
  xxx-small: 1px,
  xx-small: 2px,
  x-small: 4px,
  small: 8px,
  medium: 16px,
  large: 24px,
  x-large: 32px,
  xx-large: 40px,
  xxx-large: 48px,
);

// classes generators
.text {
  @include modifiers($colors, 'color');
  @include modifiers($font-sizes, 'font-size');
}

.m {
  @include modifiers($spacing-sizes, 'margin');
  @include modifiers($spacing-sizes, 'margin-top', 't-');
  @include modifiers($spacing-sizes, 'margin-right', 'r-');
  @include modifiers($spacing-sizes, 'margin-bottom', 'b-');
  @include modifiers($spacing-sizes, 'margin-left', 'l-');
}

.p {
  @include modifiers($spacing-sizes, 'padding');
  @include modifiers($spacing-sizes, 'padding-top', 't-');
  @include modifiers($spacing-sizes, 'padding-right', 'r-');
  @include modifiers($spacing-sizes, 'padding-bottom', 'b-');
  @include modifiers($spacing-sizes, 'padding-left', 'l-');
}

body {
  padding: 0;
  margin: 0;
}

h1, h2, h3, h4, h5, h6 {
  padding: 0;
  margin: 0;
}